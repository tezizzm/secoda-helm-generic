apiVersion: kots.io/v1beta1
kind: HelmChart
metadata:
  name: secoda
spec:
  # chart identifies a matching chart from a .tgz
  chart:
    name: secoda
    chartVersion: 1.0.0

  # values are used in the customer environment, as a pre-render step
  # these values will be supplied to helm template
  values:
    replicated:
      isEmbeddedCluster: repl{{ eq Distribution "embedded-cluster"}}
      isKOTSManaged: true
      imagePullSecrets:
        - name: 'repl {{ ImagePullSecretName }}'
      image:
        registry: 'repl {{ HasLocalRegistry | ternary LocalRegistryHost "$REGISTRY" }}'
        repository: 'repl {{ HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/index.docker.io/replicated" ) }}/replicated-sdk'

    # Service configurations
    services:
      api:
        image:
          registry: 'repl {{ if eq .replicated.isEmbeddedCluster "1"}}registry.default.svc.cluster.localrepl {{ else}} repl {{ .replicated.image.registry }} repl {{ end}}'
          name: "on-premise-api"
          tag: 'repl {{ .replicated.image.tag }}'
          pullPolicy: IfNotPresent
        secret: 'repl {{ if eq .Values.api_service_secret_auto "1"}}{{.Values.api_service_secret}}{{else}}repl-generated-secret{{end}}'
        publicKey: 'repl {{ if eq .Values.keys_auto "1"}}{{if .Values.public_key_file}}{{.Values.public_key_file}}{{else}}{{.Values.public_key}}{{end}}{{else}}repl-generated-public-key{{end}}'
        privateKey: 'repl {{ if eq .Values.keys_auto "1"}}{{if .Values.private_key_file}}{{.Values.private_key_file}}{{else}}{{.Values.private_key}}{{end}}{{else}}repl-generated-private-key{{end}}'
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      frontend:
        image:
          registry: 'repl {{ HasLocalRegistry | ternary LocalRegistryHost "$REGISTRY" }}'
          repository: 'repl {{ HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/docker.io/secoda") }}'
          tag: 'repl {{ ConfigOption "frontend_version" | default .Chart.AppVersion }}'

    # Redis configuration
    redis:
      enabled: 'repl {{ ConfigOptionEquals "redis_deployment" "internal"}}'
      image:
        registry: 'repl {{ HasLocalRegistry | ternary LocalRegistryHost "$REGISTRY" }}'
        repository: 'repl {{ HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/docker.io/bitnami") }}/redis'
        tag: "7.0.12-debian-11-r11"
        pullPolicy: IfNotPresent
      persistence:
        size: 'repl {{ .Values.redis_size}}'
    
    # PostgreSQL configuration
    postgresql:
      enabled: 'repl {{ ConfigOptionEquals "postgres_deployment" "internal"}}'
      image:
        registry: 'repl {{ HasLocalRegistry | ternary LocalRegistryHost "$REGISTRY" }}'
        repository: 'repl {{ HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/docker.io/bitnami") }}/postgresql'
        tag: "14.10.0-debian-11-r14"
        pullPolicy: IfNotPresent
      auth:
        username: 'repl {{ .Values.postgres_username}}'
        password: 'repl {{ .Values.postgres_password}}'
        database: 'repl {{ .Values.postgres_database}}'
      primary:
        persistence:
          size: 'repl {{ .Values.postgres_size}}'
        resources:
          requests:
            memory: 8Gi
            cpu: 2
          limits:
            memory: 8Gi
            cpu: 2
    
    # OpenSearch configuration
    opensearch:
      enabled: 'repl {{ ConfigOptionEquals "opensearch_deployment" "internal"}}'
      image:
        registry: 'repl {{ HasLocalRegistry | ternary LocalRegistryHost "$REGISTRY" }}'
        repository: 'repl {{ HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/docker.io/opensearchproject") }}/opensearch'
        tag: "2.9.0"
        pullPolicy: IfNotPresent
      auth:
        adminUser: 'repl {{ .Values.opensearch_username}}'
        adminPassword: 'repl {{ .Values.opensearch_password}}'
      persistence:
        size: 'repl {{ .Values.opensearch_size}}'
      resources:
        requests:
          memory: 4Gi
          cpu: 1
        limits:
          memory: 4Gi
          cpu: 1
    
    # OpenSearch Dashboards configuration
    opensearchDashboards:
      enabled: 'repl {{ ConfigOptionEquals "opensearch_dashboards_enabled" "1"}}'
      image:
        registry: 'repl {{ HasLocalRegistry | ternary LocalRegistryHost "$REGISTRY" }}'
        repository: 'repl {{ HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/docker.io/opensearchproject") }}/opensearch-dashboards'
        tag: "2.9.0"
        pullPolicy: IfNotPresent
      opensearchHosts: "http://{{ .Release.Name }}-opensearch:9200"
    
    # External services configuration
    externalServices:
      # PostgreSQL
      postgres:
        external: 'repl {{ ConfigOptionEquals "postgres_deployment" "external"}}'
        host: 'repl {{ if ConfigOptionEquals "postgres_deployment" "external"}}{{ConfigOption "postgres_host"}}{{else}}{{if ConfigOptionEquals "postgres_deployment" "internal"}}secoda-postgresql{{end}}{{end}}'
        port: 'repl {{ if ConfigOptionEquals "postgres_deployment" "external"}}{{ConfigOption "postgres_port"}}{{else}}5432{{end}}'
        username: 'repl {{ ConfigOption "postgres_username"}}'
        password: 'repl {{ ConfigOption "postgres_password"}}'
        database: 'repl {{ ConfigOption "postgres_database"}}'
      
      # Redis
      redis:
        external: 'repl {{ ConfigOptionEquals "redis_deployment" "external"}}'
        host: 'repl {{ if ConfigOptionEquals "redis_deployment" "external"}}{{ConfigOption "redis_host"}}{{else}}{{if ConfigOptionEquals "redis_deployment" "internal"}}secoda-redis-master{{end}}{{end}}'
        port: 'repl {{ if ConfigOptionEquals "redis_deployment" "external"}}{{ConfigOption "redis_port"}}{{else}}6379{{end}}'
      
      # OpenSearch
      opensearch:
        external: 'repl {{ ConfigOptionEquals "opensearch_deployment" "external"}}'
        host: 'repl {{ if ConfigOptionEquals "opensearch_deployment" "external"}}{{ConfigOption "opensearch_host"}}{{else}}{{if ConfigOptionEquals "opensearch_deployment" "internal"}}secoda-opensearch{{end}}{{end}}'
        port: 'repl {{ if ConfigOptionEquals "opensearch_deployment" "external"}}{{ConfigOption "opensearch_port"}}{{else}}9200{{end}}'